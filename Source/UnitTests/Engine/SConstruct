# UnitTests/Engine/SConstruct
# Builds engine library unit tests
# Copyright (c) 2010 Sunside Inc., All Rights Reserved
# Author: Joe Riedel
# See Radiance/LICENSE for licensing terms.

Import('radvars')
Import('boost_threads')
Import('radiance_runtime')
Import('radiance_engine')
Import('glsl_optimizer')
Import('lua')
Import('variant_dir')
(build, source) = radvars

def build_tests(name, type):
	x = None
	(linkQt, engine) = radiance_engine
	if linkQt():
		x = build.qtBuilder(name, build, source, '.', variant_dir, type)
	else:
		x = build.exeBuilder(name, build, source, '.', variant_dir, type)
				
	build.backend.addCgLibs(x.source)
	build.backend.configLua(x.source)

###############################################################################
# Source
###############################################################################

	x.add('UnitTests.cpp')

###############################################################################
# Libs
###############################################################################

	x.add(engine, type='lib')
	x.add(boost_threads, type='lib')
	x.add(lua, type='lib')
	x.add(radiance_runtime, type='lib')
	
	if build.tools():
		x.add(glsl_optimizer, type='lib')
	
	if build.pc():
		build.backend.addSDLLibs(x.source)
		
	return x.create()

build_tests('engine_unittests', 'CON')
// And.h
// Copyright (c) 2010 Sunside Inc., All Rights Reserved
// Author: Mike Songy
// See Radiance/LICENSE for licensing terms.

#pragma once

#include "../IntegralConstant.h"


namespace meta {

//////////////////////////////////////////////////////////////////////////////////////////
// meta::And<B0, B1, B2, B3, B4, B5, B6, B7, B8, B9>
//////////////////////////////////////////////////////////////////////////////////////////
//
// Result inherits from TrueType or FalseType
//
//////////////////////////////////////////////////////////////////////////////////////////

template <
	bool B0,
	bool B1,
	bool B2 = true,
	bool B3 = true,
	bool B4 = true,
	bool B5 = true,
	bool B6 = true,
	bool B7 = true,
	bool B8 = true,
	bool B9 = true
>
struct And;

//////////////////////////////////////////////////////////////////////////////////////////
// meta::And<B0, B1, B2, B3, B4, B5, B6, B7, B8, B9> : FalseType
//////////////////////////////////////////////////////////////////////////////////////////

template <bool B0, bool B1, bool B2, bool B3, bool B4, bool B5, bool B6, bool B7, bool B8, bool B9>
struct And :
public FalseType
{
};

//////////////////////////////////////////////////////////////////////////////////////////
// meta::And<B0, B1, B2, B3, B4, B5, B6, B7, B8, B9> : TrueType
//////////////////////////////////////////////////////////////////////////////////////////

template <>
struct And<true, true, true, true, true, true, true, true, true, true> :
public TrueType
{
};

} // meta


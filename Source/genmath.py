# genmath.py
# Copyright (c) 2013 Sunside Inc., All Rights Reserved
# Author: Joe Riedel
# See Radiance/LICENSE for licensing terms.
# Generates math tables.

import io
import math
import random

print("generating Runtime/Math/MathTables.inl")

s = io.open('Runtime/Math/MathTables.inl', 'w')
s.write(u'// MathTables.inl\n')
s.write(u'// Copyright (c) 2013 Sunside Inc., All Rights Reserved\n')
s.write(u'// auto generated by Radiance/Source/genmath.py\n')
s.write(u'// See Radiance/LICENSE for licensing terms.\n\n')

kNumFloats = 1024

s.write(u'enum { kNumRandFloats = %d };\n' % kNumFloats)
s.write(u'const float kRandFloats[kNumRandFloats] = {\n')

random.seed()

for x in range(1, kNumFloats+1):
	f = random.random()
	s.write(u'\t%ff' % f)
	if (x != kNumFloats):
		s.write(u',')
	s.write(u'\n')

s.write(u'};\n\n')

kNumFloats = 2048

s.write(u'enum { kNumSinFloats = %d };\n' % kNumFloats)
s.write(u'const float kSinFloats[kNumSinFloats] = {\n')

for x in range(0, kNumFloats):
	f = (x/kNumFloats) * math.pi * 2.0
	f = math.sin(f - math.pi)
	s.write(u'\t%ff' % f)
	if (x != (kNumFloats-1)):
		s.write(u',')
	s.write(u'\n')

s.write(u'};\n\n')

s.write(u'const float kCosFloats[kNumSinFloats] = {\n')

for x in range(0, kNumFloats):
	f = (x/kNumFloats) * math.pi * 2.0
	f = math.cos(f - math.pi)
	s.write(u'\t%ff' % f)
	if (x != (kNumFloats-1)):
		s.write(u',')
	s.write(u'\n')

s.write(u'};\n\n')


s.close()
